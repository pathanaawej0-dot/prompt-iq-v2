import jsPDF from 'jspdf';

export function exportToPDF(prompt: {
  input: string;
  output: string;
  framework: string;
  qualityScore: number;
  date: string;
}) {
  const doc = new jsPDF();

  // Add PromptIQ branding
  doc.setFillColor(139, 92, 246); // Purple
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.text('PromptIQ', 15, 20);
  doc.setFontSize(10);
  doc.text('Legendary Prompt Architect', 15, 26);

  // Reset color
  doc.setTextColor(0, 0, 0);

  // Add content
  let yPos = 45;

  // Date
  doc.setFontSize(9);
  doc.setTextColor(100, 100, 100);
  doc.text(`Generated: ${prompt.date}`, 15, yPos);
  yPos += 10;

  // Framework & Score
  doc.text(`Framework: ${prompt.framework} | Quality Score: ${prompt.qualityScore}/10`, 15, yPos);
  yPos += 15;

  // Input
  doc.setFontSize(12);
  doc.setTextColor(0, 0, 0);
  doc.text('Your Input:', 15, yPos);
  yPos += 7;

  doc.setFontSize(10);
  doc.setTextColor(60, 60, 60);
  const inputLines = doc.splitTextToSize(prompt.input, 180);
  doc.text(inputLines, 15, yPos);
  yPos += inputLines.length * 5 + 10;

  // Generated Prompt
  doc.setFontSize(12);
  doc.setTextColor(0, 0, 0);
  doc.text('Generated Legendary Prompt:', 15, yPos);
  yPos += 7;

  doc.setFontSize(9);
  doc.setTextColor(40, 40, 40);
  const outputLines = doc.splitTextToSize(prompt.output, 180);

  // Handle pagination
  for (let i = 0; i < outputLines.length; i++) {
    if (yPos > 270) {
      doc.addPage();
      yPos = 20;
    }
    doc.text(outputLines[i], 15, yPos);
    yPos += 5;
  }

  // Footer
  doc.setFontSize(8);
  doc.setTextColor(150, 150, 150);
  const pageCount = (doc as any).internal.pages.length - 1;
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.text('Generated by PromptIQ.com', 15, 290);
    doc.text(`Page ${i} of ${pageCount}`, 180, 290);
  }

  // Download
  const filename = `promptiq-${new Date().getTime()}.pdf`;
  doc.save(filename);
}
